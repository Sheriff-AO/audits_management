# Generated by Django 3.2.7 on 2022-01-23 06:40

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('audits', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Checklist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.CharField(blank=True, max_length=200, null=True)),
                ('branch', models.CharField(blank=True, max_length=200, null=True)),
                ('site_address', models.CharField(max_length=200, null=True)),
                ('site_code', models.PositiveIntegerField(null=True)),
                ('latitude', models.DecimalField(decimal_places=10, max_digits=12, null=True)),
                ('longitude', models.DecimalField(decimal_places=10, max_digits=12, null=True)),
                ('business_type', models.CharField(max_length=100, null=True)),
                ('contact_person_name', models.CharField(max_length=200, null=True)),
                ('contact_personPhone', models.PositiveIntegerField(null=True)),
                ('vendor', models.CharField(blank=True, max_length=200, null=True)),
                ('auditor_name', models.CharField(blank=True, max_length=200, null=True)),
                ('auditor_phone', models.PositiveIntegerField(null=True)),
                ('auditDate', models.DateField(null=True)),
                ('location', models.TextField(blank=True, help_text='Please enter the number of ACs per location.', null=True, verbose_name='ACs by Location')),
                ('split_1', models.IntegerField(blank=True, null=True, verbose_name='Number of 1HP')),
                ('split_2', models.IntegerField(blank=True, null=True, verbose_name='Number of 1.5HP')),
                ('split_3', models.IntegerField(blank=True, null=True, verbose_name='Number of 2HP')),
                ('split_4', models.IntegerField(blank=True, null=True, verbose_name='Number of 2.5HP')),
                ('standing_unit_1', models.IntegerField(blank=True, null=True, verbose_name='Number of 3HP')),
                ('standing_unit_2', models.IntegerField(blank=True, null=True, verbose_name='Number of 5HP')),
                ('standing_unit_3', models.IntegerField(blank=True, null=True, verbose_name='Number of 10HP')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='Comment')),
                ('florescent', models.CharField(blank=True, max_length=50, null=True)),
                ('led', models.CharField(blank=True, max_length=50, null=True)),
                ('halogen', models.CharField(blank=True, max_length=50, null=True)),
                ('energy_saver', models.CharField(blank=True, max_length=50, null=True)),
                ('panel_light', models.CharField(blank=True, max_length=50, null=True)),
                ('other_lights', models.CharField(blank=True, help_text='Please state the power rating in Watts.', max_length=50, null=True)),
                ('desktop', models.IntegerField(blank=True, null=True)),
                ('laptop', models.IntegerField(blank=True, null=True)),
                ('printer', models.IntegerField(blank=True, null=True)),
                ('counting_machine', models.IntegerField(blank=True, null=True)),
                ('scanner', models.IntegerField(blank=True, null=True)),
                ('atms', models.IntegerField(blank=True, null=True)),
                ('tv', models.IntegerField(blank=True, null=True)),
                ('water_dispenser', models.IntegerField(blank=True, null=True)),
                ('exchange_rate_board', models.IntegerField(blank=True, null=True)),
                ('signage_light', models.IntegerField(blank=True, null=True)),
                ('water_pump', models.IntegerField(blank=True, null=True)),
                ('fan', models.IntegerField(blank=True, null=True)),
                ('microwave', models.IntegerField(blank=True, null=True)),
                ('card_printer', models.IntegerField(blank=True, null=True)),
                ('time_stamping_machine', models.IntegerField(blank=True, null=True)),
                ('shredder', models.IntegerField(blank=True, null=True)),
                ('sorting_machine', models.IntegerField(blank=True, null=True)),
                ('fridge', models.IntegerField(blank=True, null=True)),
                ('mantrap_door', models.IntegerField(blank=True, null=True)),
                ('hand_dryer', models.IntegerField(blank=True, null=True)),
                ('other_appliances', models.TextField(blank=True, help_text='Please enter the name and counts of other appliances if exist.', null=True)),
                ('connects_to_grid', models.BooleanField(blank=True, default=False, null=True)),
                ('connects_to_generator', models.BooleanField(blank=True, default=False, null=True)),
                ('connects_to_solar', models.BooleanField(blank=True, default=False, null=True)),
                ('details', models.TextField(null=True)),
                ('grid_avg_cost', models.CharField(blank=True, max_length=60, null=True)),
                ('diesel_avg_cost', models.CharField(blank=True, max_length=60, null=True)),
                ('gensets_maintenance_avg_cost', models.CharField(blank=True, max_length=60, null=True)),
                ('ac_maintenance_avg_cost', models.CharField(blank=True, max_length=60, null=True)),
                ('other_cost', models.CharField(blank=True, max_length=60, null=True)),
                ('genset_1', models.CharField(blank=True, help_text='In kVA', max_length=60, null=True)),
                ('genset_2', models.CharField(blank=True, max_length=60, null=True)),
                ('genset_3', models.CharField(blank=True, max_length=60, null=True)),
                ('genset_4', models.CharField(blank=True, max_length=60, null=True)),
                ('transformer_1', models.CharField(blank=True, help_text='In kVA', max_length=60, null=True)),
                ('transformer_2', models.CharField(blank=True, max_length=60, null=True)),
                ('noOfAtm', models.PositiveIntegerField()),
                ('otherAtmDetails', models.TextField()),
                ('opening_time', models.TimeField()),
                ('closing_time', models.TimeField()),
                ('Monday_to_Friday', models.BooleanField(blank=True, default=False, null=True)),
                ('Monday_to_Saturday', models.BooleanField(blank=True, default=False, null=True)),
                ('Monday_to_Sunday', models.BooleanField(blank=True, default=False, null=True)),
                ('item1', models.CharField(blank=True, help_text='State the equipment/appliance name and the rating in kVA in each case. ', max_length=100, null=True)),
                ('item2', models.CharField(blank=True, max_length=100, null=True)),
                ('item3', models.CharField(blank=True, max_length=100, null=True)),
                ('item4', models.CharField(blank=True, max_length=100, null=True)),
                ('item5', models.CharField(blank=True, max_length=100, null=True)),
                ('item6', models.CharField(blank=True, max_length=100, null=True)),
                ('item7', models.CharField(blank=True, max_length=100, null=True)),
                ('inverter_1', models.CharField(blank=True, max_length=100, null=True)),
                ('inverter_2', models.CharField(blank=True, max_length=100, null=True)),
                ('inverter_3', models.CharField(blank=True, max_length=100, null=True)),
                ('ups_1', models.CharField(blank=True, help_text='In kVA', max_length=100, null=True)),
                ('ups_2', models.CharField(blank=True, max_length=100, null=True)),
                ('ups_3', models.CharField(blank=True, max_length=100, null=True)),
                ('stabilizer_1', models.CharField(blank=True, help_text='In kVA', max_length=100, null=True)),
                ('stabilizer_2', models.CharField(blank=True, max_length=100, null=True)),
                ('battery_bank_1', models.CharField(blank=True, help_text='e.g 24 units of 12V 200AH', max_length=100, null=True)),
                ('battery_bank_2', models.CharField(blank=True, max_length=100, null=True)),
                ('battery_bank_3', models.CharField(blank=True, max_length=100, null=True)),
                ('battery_bank_4', models.CharField(blank=True, max_length=100, null=True)),
                ('bungalow', models.BooleanField(blank=True, default=False, null=True)),
                ('one_storey', models.BooleanField(blank=True, default=False, null=True)),
                ('two_storey', models.BooleanField(blank=True, default=False, null=True)),
                ('three_storey', models.BooleanField(blank=True, default=False, null=True)),
                ('multi_resident', models.BooleanField(blank=True, default=False, null=True)),
                ('multi_commercial', models.BooleanField(blank=True, default=False, null=True)),
                ('mall', models.BooleanField(blank=True, default=False, null=True)),
                ('ownership', models.CharField(blank=True, max_length=100, null=True)),
                ('picture', models.ImageField(blank=True, default='default1.jpg', null=True, upload_to='building_pics')),
                ('roof_type', models.CharField(blank=True, max_length=100, null=True)),
                ('roof_picture', models.ImageField(blank=True, default='default2.jpg', null=True, upload_to='roof_pics')),
                ('roof_length', models.DecimalField(decimal_places=4, max_digits=8, null=True)),
                ('roof_width', models.DecimalField(decimal_places=4, max_digits=8, null=True)),
                ('total_area', models.DecimalField(decimal_places=4, max_digits=8, null=True)),
                ('number_of_panels', models.PositiveIntegerField(blank=True, null=True)),
                ('roofing_sheet_material', models.CharField(blank=True, max_length=100, null=True)),
                ('roofing_truss_material', models.CharField(blank=True, max_length=100, null=True)),
                ('roofing_truss_spacing', models.DecimalField(decimal_places=4, max_digits=8, null=True)),
                ('repair_needed', models.BooleanField(blank=True, default=False, null=True)),
                ('minor_repair', models.BooleanField(blank=True, default=False, null=True)),
                ('major_repair', models.BooleanField(blank=True, default=False, null=True)),
                ('complete_replacement', models.BooleanField(blank=True, default=False, null=True)),
                ('changeover_box_picture', models.ImageField(blank=True, default='default3.jpg', null=True, upload_to='changeover_pics')),
                ('Distribution_board_picture', models.ImageField(blank=True, default='default4.jpg', null=True, upload_to='db_pics')),
                ('general_comment', models.TextField(blank=True, null=True)),
                ('er_available', models.BooleanField(blank=True, default=False, null=True)),
                ('space_toBuild', models.CharField(max_length=100, null=True)),
                ('on_what_floor', models.CharField(blank=True, max_length=20, null=True)),
                ('dimension', models.CharField(blank=True, max_length=30, null=True)),
                ('ER_picture_or_space_to_build', models.ImageField(blank=True, default='default6.jpg', null=True, upload_to='ER_pics')),
                ('distance_to_generator', models.CharField(blank=True, max_length=80, null=True)),
                ('distance_to_powerRoom', models.CharField(blank=True, max_length=80, null=True)),
                ('one', models.CharField(max_length=150, null=True, verbose_name='Will ladder or scaffolds be required for access to the roof?')),
                ('two', models.CharField(max_length=150, null=True, verbose_name='Will fall protection be required while working on the roof?')),
                ('three', models.CharField(max_length=150, null=True, verbose_name='Is there enough access and egress at proposed equipment room?')),
                ('four', models.CharField(max_length=150, null=True, verbose_name='Does the proposed equipment room has an existing smoke/fire alarm?')),
                ('five', models.CharField(max_length=150, null=True, verbose_name='Is there enough access and egress at the generator area. If we are dealing with a confined space please state?')),
                ('six', models.CharField(max_length=150, null=True, verbose_name='Are there existing bund walls/secondary spill contigency arrangement around the diesel storage tank?')),
                ('seven', models.CharField(max_length=150, null=True, verbose_name='Are there visible signs of oil spillage around the generator area/plinth? Please take date-staped pictures')),
                ('eight', models.ImageField(blank=True, default='default5.jpg', null=True, upload_to='safety')),
                ('nine', models.CharField(max_length=150, null=True, verbose_name='Are there any overhead power cables that will be a problem for work at height?')),
                ('ten', models.CharField(max_length=150, null=True, verbose_name='Are there any environmental or safety concerns?')),
                ('client_rep', models.CharField(blank=True, max_length=150, null=True)),
                ('position', models.CharField(blank=True, max_length=80, null=True)),
                ('client_repPhone', models.PositiveIntegerField(null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('GeneralComment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Checklist For Banks',
            },
        ),
        migrations.RemoveField(
            model_name='pageone',
            name='client',
        ),
        migrations.DeleteModel(
            name='ChecklistForBank',
        ),
        migrations.DeleteModel(
            name='PageFive',
        ),
        migrations.DeleteModel(
            name='PageFour',
        ),
        migrations.DeleteModel(
            name='PageOne',
        ),
        migrations.DeleteModel(
            name='PageSeven',
        ),
        migrations.DeleteModel(
            name='PageSix',
        ),
        migrations.DeleteModel(
            name='PageThree',
        ),
        migrations.DeleteModel(
            name='PageTwo',
        ),
    ]
