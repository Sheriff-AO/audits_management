# Generated by Django 3.2.7 on 2022-01-26 10:14

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('audits', '0004_auto_20220123_0755'),
    ]

    operations = [
        migrations.CreateModel(
            name='Checklist2',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.CharField(blank=True, max_length=200, null=True)),
                ('branch', models.CharField(blank=True, max_length=200, null=True)),
                ('site_address', models.CharField(blank=True, max_length=200, null=True)),
                ('site_code', models.PositiveIntegerField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=10, max_digits=12, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=10, max_digits=12, null=True)),
                ('business_type', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_person_name', models.CharField(blank=True, max_length=200, null=True)),
                ('contact_personPhone', models.PositiveIntegerField(blank=True, null=True)),
                ('vendor', models.CharField(blank=True, max_length=200, null=True)),
                ('auditor_name', models.CharField(blank=True, max_length=200, null=True)),
                ('auditor_phone', models.PositiveIntegerField(blank=True, null=True)),
                ('auditDate', models.DateField(blank=True, null=True)),
                ('pms_pump', models.CharField(blank=True, max_length=100, null=True)),
                ('ago_pump', models.CharField(blank=True, max_length=100, null=True)),
                ('dpk_pump', models.CharField(blank=True, max_length=100, null=True)),
                ('surface_transfer_pump', models.CharField(blank=True, help_text='1.5HP', max_length=100, null=True)),
                ('water_pump', models.CharField(blank=True, max_length=100, null=True)),
                ('location', models.TextField(blank=True, help_text='Please enter the number of ACs by location, stating the codition as: working or not working.', null=True, verbose_name='ACs by Location')),
                ('split_1', models.IntegerField(blank=True, null=True, verbose_name='Number of 1HP')),
                ('split_2', models.IntegerField(blank=True, null=True, verbose_name='Number of 1.5HP')),
                ('split_3', models.IntegerField(blank=True, null=True, verbose_name='Number of 2HP')),
                ('split_4', models.IntegerField(blank=True, null=True, verbose_name='Number of 2.5HP')),
                ('standing_unit_1', models.IntegerField(blank=True, null=True, verbose_name='Number of 3HP')),
                ('standing_unit_2', models.IntegerField(blank=True, null=True, verbose_name='Number of 5HP')),
                ('standing_unit_3', models.IntegerField(blank=True, null=True, verbose_name='Number of 10HP')),
                ('florescent', models.CharField(blank=True, max_length=50, null=True)),
                ('led', models.CharField(blank=True, max_length=50, null=True)),
                ('halogen', models.CharField(blank=True, max_length=50, null=True)),
                ('energy_saver', models.CharField(blank=True, max_length=50, null=True)),
                ('panel_light', models.CharField(blank=True, max_length=50, null=True)),
                ('other_lights', models.CharField(blank=True, help_text='Please state the power rating in Watts.', max_length=50, null=True)),
                ('generator_1', models.CharField(blank=True, max_length=50, null=True)),
                ('generator_2', models.CharField(blank=True, max_length=50, null=True)),
                ('connects_to_grid', models.CharField(blank=True, max_length=50, null=True)),
                ('transformer_size', models.CharField(blank=True, help_text='in kVA', max_length=50, null=True)),
                ('fridge', models.IntegerField(blank=True, null=True)),
                ('freezer', models.IntegerField(blank=True, null=True)),
                ('fan', models.IntegerField(blank=True, null=True)),
                ('printer', models.IntegerField(blank=True, null=True)),
                ('scanner', models.IntegerField(blank=True, null=True)),
                ('note_counting_machine', models.IntegerField(blank=True, null=True)),
                ('others_equipment', models.TextField()),
                ('three_phase_equipment', models.BooleanField(help_text='State the size of te three pahse equipment (in HP) below')),
                ('size', models.CharField(blank=True, max_length=100, null=True)),
                ('roof_type', models.CharField(blank=True, help_text='Flat, Mono-Pitch, Double-Pitch, Specify if others', max_length=200, null=True)),
                ('roof_material', models.CharField(blank=True, help_text='Concrete slab, Aluminum, Ardex, Specify if others', max_length=30, null=True)),
                ('roofing_sheet_thickness', models.IntegerField(help_text='if Aluminum', null=True)),
                ('roofing_sheet_lapping', models.CharField(blank=True, max_length=40, null=True)),
                ('roofing_truss_material', models.CharField(blank=True, max_length=40, null=True)),
                ('ER_picture_or_space_to_build', models.ImageField(default='default1.jpg', upload_to='er_pics')),
                ('building_type', models.CharField(default=False, help_text='State the building type and other information as below.', max_length=100)),
                ('building_picture', models.ImageField(default='default2.jpg', upload_to='building_pics')),
                ('roof_picture', models.ImageField(default='default3.jpg', upload_to='roof_pics')),
                ('changeover_box_picture', models.ImageField(default='default4.jpg', upload_to='changeover_pics')),
                ('Distribution_board_picture', models.ImageField(default='default5.jpg', upload_to='db_pics')),
                ('opening_time', models.TimeField(blank=True, help_text='State in 24-hours format', null=True)),
                ('closing_time', models.TimeField(blank=True, help_text='State in 24-hours format', null=True)),
                ('one', models.CharField(max_length=150, null=True, verbose_name='Will ladder or scaffolds be required for access to the roof?')),
                ('two', models.CharField(max_length=150, null=True, verbose_name='Will fall protection be required while working on the roof?')),
                ('three', models.CharField(max_length=150, null=True, verbose_name='Is there enough access and egress at proposed equipment room?')),
                ('four', models.CharField(max_length=150, null=True, verbose_name='Does the proposed equipment room has an existing smoke/fire alarm?')),
                ('five', models.CharField(max_length=150, null=True, verbose_name='Is there enough access and egress at the generator area. If we are dealing with a confined space please state?')),
                ('six', models.CharField(max_length=150, null=True, verbose_name='Are there existing bund walls/secondary spill contigency arrangement around the diesel storage tank?')),
                ('seven', models.CharField(max_length=150, null=True, verbose_name='Are there visible signs of oil spillage around the generator area/plinth? Please take date-staped pictures')),
                ('eight', models.ImageField(blank=True, default='default6.jpg', null=True, upload_to='safety')),
                ('nine', models.CharField(max_length=150, null=True, verbose_name='Are there any overhead power cables that will be a problem for work at height?')),
                ('ten', models.CharField(max_length=150, null=True, verbose_name='Are there any environmental or safety concerns?')),
                ('client_rep', models.CharField(blank=True, max_length=150, null=True)),
                ('position', models.CharField(blank=True, max_length=80, null=True)),
                ('client_repPhone', models.PositiveIntegerField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('GeneralComment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Checklist For Gas and Fuel Stations',
            },
        ),
        migrations.CreateModel(
            name='Checklist3',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('client', models.CharField(blank=True, max_length=200, null=True)),
                ('branch', models.CharField(blank=True, max_length=200, null=True)),
                ('site_address', models.CharField(blank=True, max_length=200, null=True)),
                ('site_code', models.PositiveIntegerField(blank=True, null=True)),
                ('latitude', models.DecimalField(blank=True, decimal_places=10, max_digits=12, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=10, max_digits=12, null=True)),
                ('business_type', models.CharField(blank=True, max_length=100, null=True)),
                ('contact_person_name', models.CharField(blank=True, max_length=200, null=True)),
                ('contact_personPhone', models.PositiveIntegerField(blank=True, null=True)),
                ('vendor', models.CharField(blank=True, max_length=200, null=True)),
                ('auditor_name', models.CharField(blank=True, max_length=200, null=True)),
                ('auditor_phone', models.PositiveIntegerField(blank=True, null=True)),
                ('auditDate', models.DateField(blank=True, null=True)),
                ('connects_to_grid', models.BooleanField(blank=True, null=True)),
                ('reasons', models.CharField(blank=True, help_text='If not connected, state reasons.', max_length=200, null=True)),
                ('grid_quality', models.CharField(blank=True, max_length=80, null=True)),
                ('grid_availability', models.IntegerField(blank=True, help_text='How many hours out of 24 do you get on an average?', null=True)),
                ('day', models.PositiveIntegerField()),
                ('night', models.PositiveIntegerField()),
                ('transformer_1', models.CharField(blank=True, help_text='State the type(step up/down), Breaker Size, location and the rating In kVA for each', max_length=100, null=True)),
                ('transformer_2', models.CharField(blank=True, max_length=100, null=True)),
                ('transformer_3', models.CharField(blank=True, max_length=100, null=True)),
                ('transformer_4', models.CharField(blank=True, max_length=100, null=True)),
                ('transformer_5', models.CharField(blank=True, max_length=100, null=True)),
                ('transformer_6', models.CharField(blank=True, max_length=100, null=True)),
                ('transformer_7', models.CharField(blank=True, max_length=100, null=True)),
                ('transformer_8', models.CharField(blank=True, max_length=100, null=True)),
                ('transformer_9', models.CharField(blank=True, max_length=100, null=True)),
                ('transformer_10', models.CharField(blank=True, max_length=100, null=True)),
                ('tariff', models.CharField(blank=True, help_text='cost per kWh', max_length=100, null=True)),
                ('genset_1', models.CharField(blank=True, help_text='State the type (GG or GG), Make, Ownership, Engine Run-Hour, Breaker Size, Controller Type&Model, location and the rating in kVA or kW for each', max_length=60, null=True)),
                ('genset_2', models.CharField(blank=True, max_length=60, null=True)),
                ('genset_3', models.CharField(blank=True, max_length=60, null=True)),
                ('genset_4', models.CharField(blank=True, max_length=60, null=True)),
                ('genset_5', models.CharField(blank=True, max_length=60, null=True)),
                ('genset_6', models.CharField(blank=True, max_length=60, null=True)),
                ('switching_mode', models.CharField(blank=True, max_length=30, null=True)),
                ('availability_of_synchPanel', models.BooleanField(blank=True, default=False)),
                ('synchPanelSize', models.CharField(blank=True, max_length=200, null=True)),
                ('minimum_load', models.CharField(blank=True, help_text='kW', max_length=30, null=True)),
                ('average_dayLoad', models.CharField(blank=True, help_text='kW', max_length=30, null=True)),
                ('average_nightLoad', models.CharField(blank=True, help_text='kW', max_length=30, null=True)),
                ('maximum_load', models.CharField(blank=True, help_text='kW', max_length=30, null=True)),
                ('daily_consumption', models.CharField(blank=True, help_text='kWh', max_length=30, null=True)),
                ('backupSize', models.DecimalField(blank=True, decimal_places=10, max_digits=12, null=True)),
                ('building_type', models.CharField(blank=True, max_length=100, null=True)),
                ('roof_space_1', models.IntegerField(blank=True, help_text='square meters', null=True)),
                ('roof_space_2', models.IntegerField(blank=True, help_text='square meters', null=True)),
                ('roof_space_3', models.IntegerField(blank=True, help_text='square meters', null=True)),
                ('roof_space_4', models.IntegerField(blank=True, help_text='square meters', null=True)),
                ('roofing_truss_material', models.TextField(blank=True, null=True)),
                ('roofing_sheet_thickness', models.TextField(help_text='if Aluminum', null=True)),
                ('roof_picture', models.ImageField(default='default2.jpg', upload_to='r_pics')),
                ('ground_space_1', models.IntegerField(blank=True, help_text='square meters', null=True)),
                ('ground_space_2', models.IntegerField(blank=True, help_text='square meters', null=True)),
                ('ground_space_picture', models.ImageField(default='default7.jpg', upload_to='gs_pics')),
                ('equipment_room_availability', models.BooleanField()),
                ('size_of_equipment_room', models.IntegerField(blank=True, help_text='square meters', null=True)),
                ('ER_picture_or_space_to_build', models.ImageField(default='default8.jpg', upload_to='er_pics')),
                ('panel_room_picture', models.ImageField(default='default9.jpg', upload_to='pr_pics')),
                ('roof_to_ER_distance', models.IntegerField(blank=True, help_text='meters', null=True)),
                ('ER_to_power_room_distance', models.IntegerField(blank=True, help_text='meters', null=True)),
                ('opening_time', models.TimeField(blank=True, help_text='State in 24-hours format', null=True)),
                ('closing_time', models.TimeField(blank=True, help_text='State in 24-hours format', null=True)),
                ('client_rep', models.CharField(blank=True, max_length=150, null=True)),
                ('position', models.CharField(blank=True, max_length=80, null=True)),
                ('client_repPhone', models.PositiveIntegerField(blank=True, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('GeneralComment', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name_plural': 'Checklist For C&I',
            },
        ),
        migrations.RemoveField(
            model_name='checklistforfillingstation',
            name='page_one',
        ),
        migrations.RemoveField(
            model_name='checklistforfillingstation',
            name='page_two',
        ),
        migrations.RemoveField(
            model_name='commercialindustrypageone',
            name='client',
        ),
        migrations.RemoveField(
            model_name='fillingstationpageone',
            name='client',
        ),
        migrations.AlterField(
            model_name='checklist',
            name='auditDate',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='checklist',
            name='auditor_phone',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='checklist',
            name='business_type',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='checklist',
            name='client_repPhone',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='checklist',
            name='contact_personPhone',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='checklist',
            name='contact_person_name',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='checklist',
            name='details',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='checklist',
            name='latitude',
            field=models.DecimalField(blank=True, decimal_places=10, max_digits=12, null=True),
        ),
        migrations.AlterField(
            model_name='checklist',
            name='longitude',
            field=models.DecimalField(blank=True, decimal_places=10, max_digits=12, null=True),
        ),
        migrations.AlterField(
            model_name='checklist',
            name='site_address',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='checklist',
            name='site_code',
            field=models.PositiveIntegerField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='checklist',
            name='space_toBuild',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.DeleteModel(
            name='ChecklistForCandI',
        ),
        migrations.DeleteModel(
            name='ChecklistForFillingStation',
        ),
        migrations.DeleteModel(
            name='CommercialIndustryPageOne',
        ),
        migrations.DeleteModel(
            name='CommercialIndustryPageTwo',
        ),
        migrations.DeleteModel(
            name='FillingStationPageOne',
        ),
        migrations.DeleteModel(
            name='FillingStationPageTwo',
        ),
    ]
